type Message {
  id: ObjectID!
  kind: MessageKind!
  created_at: Time!
  author: User!
  data: String!
  read: Boolean!
  read_at: Time
}

enum MessageKind {
  EMOTE_COMMENT
  INBOX
  NEWS
}

extend type Query {
  inbox(after_id: ObjectID): [Message]! @hasPermissions
}

extend type Mutation {
  readMessages(message_ids: [ObjectID!]!, read: Boolean): Int @hasPermissions
  sendInboxMessage(
    recipients: [String!]!
    subject: String!
    content: String!
    important: Boolean
    anonymous: Boolean
  ): Message @hasPermissions(role: [SEND_MESSAGES])
}
